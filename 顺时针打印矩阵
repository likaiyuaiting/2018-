**题目描述**
输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，例如，如果输入如下矩阵：
``` 
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 16
```
 则依次打印出数字`1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.`

**Solution**
一层一层剥离，记录开头和结尾。`right` and `down`代表如果向右走过则可以向下走，如果向下走过则可以向左走。做题的时候暂时只能想到这样了。
```c++
class Solution {
public:
	vector<int> printMatrix(vector<vector<int> > matrix) {
		int b1 = 0, b2 = 0, e1 = matrix.size(), e2 = matrix[0].size();
		vector<int> res;
		while (e1>b1 && e2>b2){
			res.push_back(matrix[b1][b2]);
			bool down = false, right = false;
			for (int i = b2+1; i < e2; i++){
				res.push_back(matrix[b1][i]);
				right = true;
			}
			for (int i = b1 + 1; i < e1; i++){
				res.push_back(matrix[i][e2 - 1]);
				down = true;
			}
			if (down){
				for (int i = e2 - 2; i >= b2; i--)res.push_back(matrix[e1 - 1][i]);
			}
			if (right){
				for (int i = e1 - 2; i > b1; i--)res.push_back(matrix[i][b2]);
			}
			b1++;
			b2++;
			e1--;
			e2--;
		}
		return res;
	}
};
```
